<?xml version='1.0' encoding='utf-8'?>
<doc><id>Coursera_234</id><course_url>https://www.coursera.org/learn/data-manipulation</course_url><course_name>Data Manipulation at Scale: Systems and Algorithms</course_name><course_platform>Coursera</course_platform><course_instructor>Bill Howe</course_instructor><course_introduction>Data analysis has replaced data acquisition as the bottleneck to evidence-based decision making --- we are drowning in it.  Extracting knowledge from large, heterogeneous, and noisy datasets requires not only powerful computing resources, but the programming abstractions to use them effectively.  The abstractions that emerged in the last decade blend ideas from parallel databases, distributed systems, and programming languages to create a new class of scalable data analytics platforms that form the foundation for data science at realistic scales.

In this course, you will learn the landscape of relevant systems, the principles on which they rely, their tradeoffs, and how to evaluate their utility against your requirements. You will learn how practical systems were derived from the frontier of research in computer science and what systems are coming on the horizon.   Cloud computing, SQL and NoSQL databases, MapReduce and the ecosystem it spawned, Spark and its contemporaries, and specialized systems for graphs and arrays will be covered.

You will also learn the history and context of data science, the skills, challenges, and methodologies the term implies, and how to structure a data science project.  At the end of this course, you will be able to:

Learning Goals: 
1. Describe common patterns, challenges, and approaches associated with data science projects, and what makes them different from projects in related fields.
2. Identify and use the programming models associated with scalable data manipulation, including relational algebra, mapreduce, and other data flow models.
3. Use database technology adapted for large-scale analytics, including the concepts driving parallel databases, parallel query processing, and in-database analytics
4. Evaluate key-value stores and NoSQL systems, describe their tradeoffs with comparable systems, the details of important examples in the space, and future trends.
5. “Think” in MapReduce to effectively write algorithms for systems including Hadoop and Spark.  You will understand their limitations, design details, their relationship to databases, and their associated ecosystem of algorithms, extensions, and languages.
write programs in Spark
6. Describe the landscape of specialized Big Data systems for graphs, arrays, and streams</course_introduction><course_category>Browse.Data Science.Data Analysis</course_category><course_tag>Relational Algebra//Python Programming//Mapreduce//SQL</course_tag><course_rating>4.3</course_rating><course_orgnization>University of Washington</course_orgnization><course_chapter>Data Science Context and Concepts//Relational Databases and the Relational Algebra//MapReduce and Parallel Dataflow Programming//NoSQL: Systems and Concepts//Graph Analytics</course_chapter><course_sub_chapter>[['Appetite Whetting: Politics', 'Appetite Whetting: Extreme Weather', 'Appetite Whetting: Digital Humanities', 'Appetite Whetting: Bibliometrics', 'Appetite Whetting: Food, Music, Public Health', "Appetite Whetting: Public Health cont'd, Earthquakes, Legal", 'Characterizing Data Science', "Characterizing Data Science, cont'd", 'Distinguishing Data Science from Related Topics', 'Four Dimensions of Data Science', 'Tools vs. Abstractions', 'Desktop Scale vs. Cloud Scale', 'Hackers vs. Analysts', 'Structs vs. Stats', "Structs vs. Stats cont'd", 'A Fourth Paradigm of Science', 'Data-Intensive Science Examples', 'Big Data and the 3 Vs', 'Big Data Definitions', 'Big Data Sources', 'Course Logistics', 'Twitter Assignment: Getting Started'], ['Data Models, Terminology', 'From Data Models to Databases', 'Pre-Relational Databases', 'Motivating Relational Databases', 'Relational Databases: Key Ideas', 'Algebraic Optimization Overview', 'Relational Algebra Overview', 'Relational Algebra Operators: Union, Difference, Selection', 'Relational Algebra Operators: Projection, Cross Product', "Relational Algebra Operators: Cross Product cont'd, Join", 'Relational Algebra Operators: Outer Join', 'Relational Algebra Operators: Theta-Join', 'From SQL to RA', 'Thinking in RA: Logical Query Plans', 'Practical SQL: Binning Timeseries', 'Practical SQL: Genomic Intervals', 'User-Defined Functions', 'Support for User-Defined Functions', 'Optimization: Physical Query Plans', 'Optimization: Choosing Physical Plans', 'Declarative Languages', 'Declarative Languages: More Examples', 'Views: Logical Data Independence', 'Indexes'], ['What Does Scalable Mean?', 'A Sketch of Algorithmic Complexity', 'A Sketch of Data-Parallel Algorithms', '"Pleasingly Parallel" Algorithms', 'More General Distributed Algorithms', 'MapReduce Abstraction', 'MapReduce Data Model', 'Map and Reduce Functions', 'MapReduce Simple Example', "MapReduce Simple Example cont'd", 'MapReduce Example: Word Length Histogram', 'MapReduce Examples: Inverted Index, Join', 'Relational Join: Map Phase', 'Relational Join: Reduce Phase', 'Simple Social Network Analysis: Counting Friends', 'Matrix Multiply Overview', 'Matrix Multiply Illustrated', 'Shared Nothing Computing', 'MapReduce Implementation', 'MapReduce Phases', 'A Design Space for Large-Scale Data Systems', 'Parallel and Distributed Query Processing', 'Teradata Example, MR Extensions', 'RDBMS vs. MapReduce: Features', 'RDBMS vs. Hadoop: Grep', 'RDBMS vs. Hadoop: Select, Aggregate, Join'], ['NoSQL Context and Roadmap', 'NoSQL Roundup', 'Relaxing Consistency Guarantees', 'Two-Phase Commit and Consensus Protocols', 'Eventual Consistency', 'CAP Theorem', 'Types of NoSQL Systems', 'ACID, Major Impact Systems', 'Memcached: Consistent Hashing', "Consistent Hashing, cont'd", 'DynamoDB: Vector Clocks', "Vector Clocks, cont'd", 'CouchDB Overview', 'CouchB Views', 'BigTable Overview', 'BigTable Implementation', 'HBase, Megastore', 'Spanner', "Spanner cont'd, Google Systems", 'MapReduce-based Systems', 'Bringing Back Joins', 'NoSQL Rebuttal', 'Almost SQL: Pig', 'Pig Architecture and Performance', 'Data Model', 'Load, Filter, Group', 'Group, Distinct, Foreach, Flatten', 'CoGroup, Join', 'Join Algorithms', 'Skew', 'Other Commands', 'Evaluation Walkthrough', 'Review', 'Context', 'Spark Examples', 'RDDs, Benefits'], ['Graph Overview', 'Structural Analysis', 'Degree Histograms, Structure of the Web', 'Connectivity and Centrality', 'PageRank', 'PageRank in more Detail', 'Traversal Tasks: Spanning Trees and Circuits', 'Traversal Tasks: Maximum Flow', 'Pattern Matching', 'Querying Edge Tables', 'Relational Algebra and Datalog for Graphs', 'Querying Hybrid Graph/Relational Data', 'Graph Query Example: NSA', 'Graph Query Example: Recursion', 'Evaluation of Recursive Programs', 'Recursive Queries in MapReduce', 'The End-Game Problem', 'Representation: Edge Table, Adjacency List', 'Representation: Adjacency Matrix', 'PageRank in MapReduce', 'PageRank in Pregel']]</course_sub_chapter><course_time>Approx. 21 hours to complete</course_time><reviews>['Assignments need to be updated, but the material is solid!', 'Thanks for this course.True Parallel computing example would have made it even more awesome .', 'Very wide and fundamentally robust introduction. ', None, 'הקורס נותן חשיפה טובה לכלי העבודה העדכניים. המשימות אינן פשוטות למשתמש המתחיל ודורשות התעמקות אך בהחלט אפשריות ', 'great exercises and assignments. The course is involving.', 'good for people who have some experience in python and SQL', 'Very relevant if you want to understand the theories behind data systems and algorithms. I consider it a bit time consuming but completely worth taking into consideration the amount of topics it covers.', '100% Recomendado', 'The course is very coherent and comprehensive. It covers only important aspects of the fields. Also, the exercises are very well prepared.', 'Awesome content. ', "While I haven't been able to keep up and submit most assignments, the material seems highly relevant and good to know. The videos are helpful and assignments provide good practice.", 'great course! ... congratulations.', 'Interesting course, good hands-on exercises. very useful course to practice python', 'Going through the content really scares someone like me. At the same time, i feel that the challenge in doing the assignments will only help me improve well. I would suggest beginners to stay away and get a hold of the basics before jumping into the course.', 'This is a great course', "The contents were very relevant and more geared to those with some experience already. The assignments are worth doing. The only problem is that some of the assignments have errors which are only  listed in pinned posts in the forum (with a link to a ticket but nothing's been done about it). Still, learned a lot so the on the whole would recommend it.", "Good! I like the final (optional) project on running on a large dataset through EC2. The lectures aren't as polished and compact as they could be but certainly a very valuable course.", None, "4.5 because it was very difficult to access the optional assignments and there was effort expended on reformatting them since the last offering of the course. Otherwise it's an excellent course and I've already been recommending it.", 'Great course!', None, 'Great course. Very helpful!', 'A great course. I would just like more assignments and more information about spark.', 'This class assumes intermediate-advanced experience coding in Python, so if you are new, you are likely to struggle a lot. The SQL part, however, was taught from a base-level understanding of almost 0 and is much easier for a beginner.']</reviews><reviewers>['By Max E', 'By Anish C', 'By Guruswamy S', 'By Gokhan C', 'By Itai S', 'By Anish M', 'By suyang z', 'By Paulo S S S', 'By Sebastian O M', 'By Mahmoud M', 'By Vaibhav G', 'By Zahid P', 'By Felipe G', 'By BI C', 'By Vijai K S', 'By Shibaji M', 'By Sofia C', 'By Dimitrios K', 'By Asier', 'By Maria P', 'By francisco y', 'By Dan S R', 'By Miao J', 'By Usman', 'By Kairsten F']</reviewers><review_date>['Nov 12, 2018', 'Jan 17, 2018', 'May 29, 2018', 'May 28, 2016', 'Nov 14, 2015', 'Sep 24, 2015', 'Oct 15, 2015', 'Feb 06, 2016', 'Nov 21, 2015', 'Jan 18, 2016', 'Jun 16, 2017', 'Nov 14, 2015', 'Mar 07, 2016', 'Jan 21, 2016', 'Jan 20, 2016', 'Sep 17, 2015', 'Nov 15, 2016', 'Jan 24, 2016', 'Nov 21, 2015', 'Oct 28, 2015', 'Jan 19, 2016', 'May 25, 2017', 'Dec 25, 2015', 'Dec 27, 2016', 'Sep 22, 2016']</review_date></doc>