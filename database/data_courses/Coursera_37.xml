<?xml version='1.0' encoding='utf-8'?>
<doc><id>Coursera_37</id><course_url>https://www.coursera.org/learn/data-structures</course_url><course_name>Data Structures</course_name><course_platform>Coursera</course_platform><course_instructor>Alexander S. Kulikov</course_instructor><course_introduction>A good algorithm usually comes together with a set of good data structures that allow the algorithm to manipulate the data efficiently. In this course, we consider the common data structures that are used in various computational problems. You will learn how these data structures are implemented in different programming languages and will practice implementing them in our programming assignments. This will help you to understand what is going on inside a particular built-in implementation of a data structure and what to expect from it. You will also learn typical use cases for these data structures.

A few examples of questions that we are going to cover in this class are the following:
1. What is a good strategy of resizing a dynamic array?
2. How priority queues are implemented in C++, Java, and Python?
3. How to implement a hash table so that the amortized running time of all operations is O(1) on average?
4. What are good strategies to keep a binary tree balanced? 

You will also learn how services like Dropbox manage to upload some large files instantly and to save a lot of storage space!

Do you have technical problems? Write to us: coursera@hse.ru</course_introduction><course_category>Browse.Computer Science.Algorithms</course_category><course_tag>Binary Search Tree//Priority Queue//Hash Table//Stack (Abstract Data Type)//List</course_tag><course_rating>4.7</course_rating><course_orgnization>University of California San Diego</course_orgnization><course_chapter>Basic Data Structures//Dynamic Arrays and Amortized Analysis//Priority Queues and Disjoint Sets//Hash Tables//Binary Search Trees//Binary Search Trees 2</course_chapter><course_sub_chapter>[['Arrays', 'Singly-Linked Lists', 'Doubly-Linked Lists', 'Stacks', 'Queues', 'Trees', 'Tree Traversal'], ['Dynamic Arrays', 'Amortized Analysis: Aggregate Method', "Amortized Analysis: Banker's Method", "Amortized Analysis: Physicist's Method", 'Amortized Analysis: Summary'], ['Introduction', 'Naive Implementations of Priority Queues', 'Binary Trees', 'Basic Operations', 'Complete Binary Trees', 'Pseudocode', 'Heap Sort', 'Building a Heap', 'Final Remarks', 'Overview', 'Naive Implementations', 'Trees for Disjoint Sets', 'Union by Rank', 'Path Compression', 'Analysis (Optional)'], ['Applications of Hashing', 'Analysing Service Access Logs', 'Direct Addressing', 'List-based Mapping', 'Hash Functions', 'Chaining Scheme', 'Chaining Implementation and Analysis', 'Hash Tables', 'Phone Book Problem', 'Phone Book Problem - Continued', 'Universal Family', 'Hashing Integers', 'Proof: Upper Bound for Chain Length (Optional)', 'Proof: Universal Family for Integers (Optional)', 'Hashing Strings', 'Hashing Strings - Cardinality Fix', 'Search Pattern in Text', "Rabin-Karp's Algorithm", 'Optimization: Precomputation', 'Optimization: Implementation and Analysis', 'Instant Uploads and Storage Optimization in Dropbox', 'Distributed Hash Tables'], ['Introduction', 'Search Trees', 'Basic Operations', 'Balance', 'AVL Trees', 'AVL Tree Implementation', 'Split and Merge'], ['Applications', 'Splay Trees: Introduction', 'Splay Trees: Implementation', '(Optional) Splay Trees: Analysis']]</course_sub_chapter><course_time>Approx. 28 hours to complete</course_time><reviews>['The fact that test cases are not available is extremely frustrating and time consuming. I absolutely disagree with the instructors about the reason why test cases are hidden.  ', 'Algorithms in lectures were useless to programming assignment', 'Good Course for Knowledge', 'Excellent course. Great coverage of data structures. Good practice questions and explanatory videos.', 'Great course ', 'Lots of fun problems to solve. To get the most of this course, solve every single problem. Good content, not enough sample problem on tree. ', 'It was difficult in using of pseudocode in my code', 'second course is just as good as first..', "It's a real good course! I have acquired so much essential knowledge about data structure and programming.", 'I got too much to learn. All helped me alot. ', 'I really enjoyed learning stacks, queues, hash, heap, trees etc in this course.  the videos and slides are very practical and informative with large no. of figures which really helped me in understanding how a particular algorithm is working and how it is efficient. every quiz contains very good conceptual questions related to a particular topic. some of them are tricky . each question has its own flavor and it really helped me to clear my doubts. Completing an assignment is really a challenge and i felt good each time when i passed a particular assignment.', 'Good combination of Theory and Application.', 'It is an amazing course. I had real fun doing it. Thank you course developers!', 'Cool course, that describes essential of main data structures and explains their characteristics, use cases and realization. Strongly recommended for software engineers! ', 'Great.', 'This course helped me clear a lot of doubts as well as it introduced me to many useful things with their implementation. I must say this course is one of the best courses available on Coursera. Thanks to great instructors who helped me a lot.\n', 'It is great oppurtunity for a student like me in remote areas.I thank Coursera for the quality education it has been providing.', 'Excellent course for those who want to be strong in algorithms', 'Very useful.', 'good', "It's really helpful .", 'I enjoyed the course.', 'Best course to learn data structures for beginners with some knowledge in programming', 'Great course, specially for beginners, thanks a lot for the material!', 'Awesome Course']</reviews><reviewers>['By Marcin W', 'By Алексей', 'By Dhiraj K P', 'By Cameron H', 'By Hakim T', 'By Adel F', 'By Сергей С', 'By Alexander R', 'By Yuchen L', 'By MITHLESH K', 'By Sanskar', 'By Vedant P', 'By Ashutosh A B', 'By Morozov A', 'By Ujjawal K', 'By Pradyumn A', 'By Gudipudi M', 'By Swastik R', 'By Chen X', 'By Sonu M', 'By Nabil A', 'By Vamsi K P', 'By shishir j', 'By Vitali L', 'By Laxmi T']</reviewers><review_date>['Apr 15, 2016', 'Apr 14, 2017', 'Mar 02, 2019', 'Mar 11, 2019', 'Mar 01, 2019', 'Dec 11, 2018', 'Mar 02, 2019', 'Dec 11, 2018', 'Dec 12, 2018', 'Dec 12, 2018', 'Dec 14, 2018', 'Jan 10, 2019', 'Dec 29, 2018', 'Jan 14, 2019', 'Jan 14, 2019', 'Jan 03, 2019', 'Jan 05, 2019', 'Jan 17, 2019', 'Feb 18, 2019', 'Feb 18, 2019', 'Jan 26, 2019', 'Jan 26, 2019', 'Feb 20, 2019', 'Feb 24, 2019', 'Mar 20, 2019']</review_date></doc>