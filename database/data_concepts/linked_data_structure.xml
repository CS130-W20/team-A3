<doc><id>linked_data_structure</id><concept_name>linked data structure</concept_name><wiki>In computer science, a linked data structure is a data structure which consists of a set of data records (nodes) linked together and organized by references (links or pointers).  The link between data can also be called a connector.
In linked data structures, the links are usually treated as special data types that can only be dereferenced or compared for equality.  Linked data structures are thus contrasted with arrays and other data structures that require performing arithmetic operations on pointers.  This distinction holds even when the nodes are actually implemented as elements of a single array, and the references are actually array indices: as long as no arithmetic is done on those indices, the data structure is essentially a linked one.
Linking can be done in two ways&#160;&#8211;  using dynamic allocation and using array index linking.
Linked data structures include linked lists, search trees, expression trees, and many other widely used data structures.  They are also key building blocks for many efficient algorithms, such as topological sort[1] and set union-find.[2]
</wiki></doc>