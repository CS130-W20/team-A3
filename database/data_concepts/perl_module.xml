<doc><id>perl_module</id><concept_name>perl module</concept_name><wiki>A Perl module is a discrete component of software for the Perl programming language.  Technically, it is a particular set of conventions for using Perl's package mechanism that has become universally adopted.[discuss]
A module defines its source code to be in a package (much like a Java package), the Perl mechanism for defining namespaces, e.g. CGI or Net::FTP or XML::Parser; the file structure mirrors the namespace structure (e.g. the source code for Net::FTP is in Net/FTP.pm). Furthermore, a module is the Perl equivalent of the class when object-oriented programming is employed.[discuss]
A collection of modules, with accompanying documentation, build scripts, and usually a test suite, composes a distribution.  The Perl community has a sizable library of distributions available for search and download via CPAN.
Perl is a language allowing many different styles of programming.  A developer is as likely to find a module written in a procedural style (for example, Test::Simple) as object-oriented (e.g. XML::Parser), both are considered equally valid according to what the module needs to do.  Modules might also be used to mixin methods (DBIx::Class) or be a pragma (strict.pm) which has an effect immediately upon being loaded.  Modules can even be used to alter the syntax of the language.  The effect of Perl modules are usually limited to the current scope in which it was loaded.
</wiki></doc>