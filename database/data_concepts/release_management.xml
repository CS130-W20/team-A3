<doc><id>release_management</id><concept_name>release management</concept_name><wiki>Release management is the process of managing, planning, scheduling and controlling a software build through different stages and environments; including testing and deploying software releases.[1]
Release management is a relatively new but rapidly growing discipline within software engineering. As software systems, software development processes, and resources become more distributed, they invariably become more specialized and complex. Furthermore, software products (especially web applications) are typically in an ongoing cycle of development, testing, and release, often running on evolving platforms with growing complexity. Such systems require dedicated resources to oversee the integration and flow of development, testing, deployment, and support.
Organizations that have adopted agile software development are seeing much higher quantities of releases[citation needed]. With the increasing popularity of agile development a new approach to software releases known as Continuous delivery is starting to influence how software transitions from development to a release.[2]   One goal of Continuous Delivery and DevOps is to release more reliable applications faster and more frequently. The movement of the application from a &#8220;build&#8221; through different environments to production as a &#8220;release&#8221; is part of the Continuous Delivery pipeline.[3] Release managers are beginning to utilize tools such as application release automation and continuous integration tools to help advance the process of Continuous Delivery and incorporate a culture of DevOps by automating a task so that it can be done more quickly, reliably, and is repeatable. More software releases have led to increased reliance on release management and automation tools to execute these complex application release processes.[4]
While Release Management focuses on the transitions from development to testing and release for a single project or a collection of related projects, Enterprise Release Management (ERM) is focused on the coordination of individual releases within a larger organization.  An organization with multiple application development groups may require a highly orchestrated series of releases over multiple months or years to implement a large-scale system.  ERM involves the coordinated effort of multiple release managers to synchronize releases in the context of an IT portfolio.
</wiki></doc>