<doc><id>polynomial-time_approximation_scheme</id><concept_name>polynomial-time approximation scheme</concept_name><wiki>In computer science, a polynomial-time approximation scheme (PTAS) is a type of approximation algorithm for optimization problems (most often, NP-hard optimization problems).
A PTAS is an algorithm which takes an instance of an optimization problem and a parameter &#949;&#160;&gt;&#160;0 and, in polynomial time, produces a solution that is within a factor 1 + &#949; of being optimal (or 1 &#8722; &#949; for maximization problems). For example, for the Euclidean traveling salesman problem, a PTAS would produce a tour with length at most (1&#160;+&#160;&#949;)L, with L being the length of the shortest tour.[1] There exists also PTAS for the class of all dense constraint satisfaction problems (CSPs).[2][clarification needed]
The running time of a PTAS is required to be polynomial in n for every fixed &#949; but can be different for different &#949;. Thus an algorithm running in time O(n1/&#949;) or even O(nexp(1/&#949;)) counts as a PTAS.
A practical problem with PTAS algorithms is that the exponent of the polynomial could increase dramatically as &#949; shrinks, for example if the runtime is O(n(1/&#949;)!). One way of addressing this is to define the efficient polynomial-time approximation scheme or EPTAS, in which the running time is required to be O(nc) for a constant c independent of &#949;. This ensures that an increase in problem size has the same relative effect on runtime regardless of what &#949; is being used; however, the constant under the big-O can still depend on &#949; arbitrarily. Even more restrictive, and useful in practice, is the fully polynomial-time approximation scheme or FPTAS, which requires the algorithm to be polynomial in both the problem size n and 1/&#949;. All problems in FPTAS are fixed-parameter tractable. Both the knapsack problem and bin packing problem admit an FPTAS.[3]
</wiki></doc>