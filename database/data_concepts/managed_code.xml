<doc><id>managed_code</id><concept_name>managed code</concept_name><wiki>Managed code is computer program code that requires and will execute only under the management of a Common Language Infrastructure (CLI) Virtual Execution System (VES) virtual machine, e.g. .NET Core CoreFX, .NET Framework Common Language Runtime (CLR), or Mono. The term was coined by Microsoft.
Managed code is the compiler output of source code written in one of over twenty high-level programming languages, including C#, J# and Visual Basic .NET.
The distinction between managed and unmanaged code is prevalent and only relevant when developing applications that interact with CLR implementations. Since many[which?] older programming languages have been ported to the CLR, the differentiation is needed to identify managed code, especially in a mixed setup. In this context, code that does not rely on the CLR is termed "unmanaged".
A source of confusion was created when Microsoft started connecting the .NET Framework with C++, and the choice of how to name the Managed Extensions for C++. It was first named Managed C++ and then renamed to C++/CLI. The creator of the C++ programming language and member of the C++ standards committee, Bjarne Stroustrup, even commented on this issue, "On the difficult and controversial question of what the CLI binding/extensions to C++ is to be called, I prefer C++/CLI as a shorthand for "The CLI extensions to ISO C++". Keeping C++ as part of the name reminds people what is the base language and will help keep C++ a proper subset of C++ with the C++/CLI extensions."[1]
</wiki></doc>