<doc><id>non-deterministic_Turing_machine</id><concept_name>non-deterministic Turing machine</concept_name><wiki>In theoretical computer science, a nondeterministic Turing machine is a theoretical model of computation.  They are used in thought experiments to examine the abilities and limitations of computers.  One of the most important open problems in theoretical computer science is the P vs. NP problem, which concerns the question of how difficult it is to simulate nondeterministic computation with a deterministic computer.
In essence, a Turing machine is imagined to be a simple computer that reads and writes symbols one at a time on an endless tape by strictly following a set of rules. It determines what action it should perform next according to its internal state and what symbol it currently sees. An example of one of a Turing Machine's rules might thus be: "If you are in state 2 and you see an 'A', change it to 'B', move left, and change to state 3."
In a deterministic Turing machine (DTM), the set of rules prescribes at most one action to be performed for any given situation.
A deterministic Turing machine has a transition function that, for a given state and symbol under the tape head, specifies three things: 
</wiki></doc>