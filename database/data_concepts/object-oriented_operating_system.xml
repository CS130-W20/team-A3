<doc><id>object-oriented_operating_system</id><concept_name>object-oriented operating system</concept_name><wiki>An object-oriented operating system[1] is an operating system that uses object-oriented design principles.
An object-oriented operating system is in contrast to an object-oriented user interface or programming framework, which can be run atop a non-object-oriented operating system like DOS or Unix.
There are already object-based language concepts involved in the design of a more typical operating system such as Unix. While a more traditional language like C does not support object-orientation as fluidly as more recent languages, the notion of, for example, a file, stream, or device driver (in Unix, each represented as a file descriptor) can be considered a good example of objects. They are, after all, abstract data types, with various methods in the form of system calls whose behavior varies based on the type of object and whose implementation details are hidden from the caller.
Object-orientation has been defined as objects + inheritance, and inheritance is only one approach to the more general problem of delegation that occurs in every operating system.[2] Object-orientation has been more widely used in the user interfaces of operating systems than in their kernels.
</wiki></doc>