<doc><id>software_reliability_testing</id><concept_name>software reliability testing</concept_name><wiki>Software reliability testing is a field of software testing that relates to testing a software's ability to function, given environmental conditions, for a  particular amount of time. Software reliability testing helps discover many problems in the software design and functionality.
Software reliability is the probability that software will work properly in a specified environment and for a given amount of time. Using the following formula, the probability of failure is calculated by testing a sample of all available input states.
Mean Time Between Failure(MTBF)=Mean Time To Failure(MTTF)+ Mean Time To Repair(MTTR)
The set of all possible input states is called the input space. To find reliability of software, we need to find output space from given input space and software.[1]
For reliability testing, data is gathered from various stages of development, such as the design and operating stages. The tests are limited due to restrictions such as cost and time restrictions. Statistical samples are obtained from the software products to test for the reliability of the software. Once sufficient data or information is gathered, statistical studies are done. Time constraints are handled by applying fixed dates or deadlines for the tests to be performed. After this phase, design of the software is stopped and the actual implementation phase starts. As there are restrictions on costs and time, the data is gathered carefully so that each data has some purpose and gets its expected precision.[2] 
To achieve the satisfactory results from reliability testing one must take care of some reliability characteristics.
For example, Mean Time to Failure (MTTF)[3] is measured in terms of three factors:
</wiki></doc>